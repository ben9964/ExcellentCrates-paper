/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id("java-library")
    id("maven-publish")
    id("net.kyori.indra.git") version "2.1.1"
}

repositories {
    mavenLocal()
    mavenCentral()
    maven("https://repo.papermc.io/repository/maven-public/") {
        content {
            includeGroup("io.papermc.paper")
            includeGroup("net.md-5")
        }
    }
    maven("https://jitpack.io") {
        content {
            includeGroup("com.github.MilkBowl")
            includeGroup("com.github.decentsoftware-eu")
        }
    }
    maven("https://repo.extendedclip.com/content/repositories/placeholderapi/") {
        content {
            includeGroup("me.clip")
        }
    }
    maven("https://repo.codemc.io/repository/maven-public/") {
        content {
            includeGroup("com.gmail.filoghost.holographicdisplays")
        }
    }

    maven("https://repo1.maven.org/maven2/") {
        content {
            includeGroup("net.citizensnpcs")
        }
    }

    maven("https://repo.dmulloy2.net/repository/public/")
    maven("https://libraries.minecraft.net")

    flatDir{
        dirs("libs")
    }
}

dependencies {
    compileOnly("io.papermc.paper:paper-api:1.21.3-R0.1-SNAPSHOT")
    compileOnly("su.nightexpress.nightcore:nightcore:2.7.2")
    compileOnly("su.nightexpress.coinsengine:CoinsEngine:2.4.1")
    compileOnly("com.comphenix.protocol:ProtocolLib:5.1.0")
    compileOnly("com.github.retrooper:packetevents-spigot:2.4.0")
    compileOnly("com.github.MilkBowl:VaultAPI:1.7")
    compileOnly("me.clip:placeholderapi:2.11.2")
    compileOnly("com.mojang:brigadier:1.0.18")
}

group = "su.nightexpress.excellentcrates"
version = "4.1.6"
description = "ExcellentCrates"

tasks{
    build{
        dependsOn(jar)
    }
}

java {
    toolchain.languageVersion.set(JavaLanguageVersion.of(21))
}

tasks.register<Jar>("sourcesJar") {
    dependsOn("classes")
    archiveClassifier.set("sources")
    from(sourceSets.getByName("main").allSource)
}

tasks.register<Jar>("javadocJar") {
    dependsOn("javadoc")
    archiveClassifier.set("javadoc")
    from(tasks.getByName("javadoc").outputs.files)
}